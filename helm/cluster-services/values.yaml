.anchors:
  clusterName: &clusterName scc-blue-w12-usw2-blue
  region: &region us-west-2
  podReplicaCount: &podReplicaCount 3
  acmArnPrimary: &acmArnPrimary "foo"
  acmArnFailover: &acmArnFailover "bar"

cluster-autoscaler:
  fullnameOverride: &awsClusterAutoscaler aws-cluster-autoscaler
  autoDiscovery:
    clusterName: *clusterName
  cloudProvider: aws
  awsRegion: *region
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - *awsClusterAutoscaler
          topologyKey: "topology.kubernetes.io/zone"
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 10
        preference:
          matchExpressions:
          - key: role
            operator: In
            values:
            - *awsClusterAutoscaler
      - weight: 1
        preference:
          matchExpressions:
          - key: node.kubernetes.io/taint
            operator: DoesNotExist
  nodeSelector: {}
  tolerations:
    - operator: "Exists"
      effect: "NoSchedule"
  topologySpreadConstraints: []
  rbac:
    serviceAccount:
      create: false
      name: *awsClusterAutoscaler
  replicaCount: *podReplicaCount

aws-ebs-csi-driver:
  controller:
    region: *region
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ebs-csi-controller
            topologyKey: "topology.kubernetes.io/zone"
    nodeSelector: {}
    tolerations: []
    topologySpreadConstraints: []
    serviceAccount:
      create: false
      name: ebs-csi-controller-sa
    replicaCount: *podReplicaCount
  enableVolumeResizing: true
  node.tolerateAllTaints: true

external-dns:
  fullnameOverride: external-dns
  provider:
    name: aws
  env:
  - name: AWS_DEFAULT_REGION
    value: *region
  affinity: {}
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  serviceAccount:
    create: false
    name: external-dns

# cert-manager:

aws-load-balancer-controller:
  fullnameOverride: aws-load-balancer-controller
  clusterName: *clusterName
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - aws-load-balancer-controller
        topologyKey: "topology.kubernetes.io/zone"
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  rbac.create: false
  serviceAccount:
    create: false
    name: aws-load-balancer-controller
  replicaCount: *podReplicaCount
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: *acmArnPrimary
      service.beta.kubernetes.io/aws-load-balancer-ssl-redirect: "443"
  servicePort: 80
  ingress:
    enabled: true
    className: alb
    annotations:
      kubernetes.io/ingress.class: "alb"
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/certificate-arn: *acmArnPrimary
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/target-group-attributes: "stickiness.enabled=true,stickiness.type=source"
      alb.ingress.kubernetes.io/healthcheck-path: "/"
      alb.ingress.kubernetes.io/healthcheck-interval: "30"
      alb.ingress.kubernetes.io/healthcheck-timeout: "5"
      alb.ingress.kubernetes.io/healthcheck-healthy-threshold: "3"
      alb.ingress.kubernetes.io/healthcheck-unhealthy-threshold: "3"