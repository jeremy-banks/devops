apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: &clusterName sdlc-dev-blue
  region: us-west-2
  version: "1.31"

vpc:
  id: vpc-id
  subnets:
    private:
      private-one: { id: subnet-id }
      private-two: { id: subnet-id }

cloudWatch:
  clusterLogging:
    enableTypes: [ "all" ]
    logRetentionInDays: 1

iam:
  podIdentityAssociations:
    # - namespace: kube-system
    #   serviceAccountName: image-builder
    #   createServiceAccount: true
    #   roleName: image-builder
    #   wellKnownPolicies:
    #     imageBuilder: true

    - namespace: kube-system
      serviceAccountName: cluster-autoscaler
      createServiceAccount: true
      roleName: cluster-autoscaler
      wellKnownPolicies:
        autoScaler: true

    - namespace: kube-system
      serviceAccountName: aws-load-balancer-controller
      createServiceAccount: true
      roleName: aws-load-balancer-controller
      wellKnownPolicies:
        awsLoadBalancerController: true

    - namespace: kube-system
      serviceAccountName: external-dns
      createServiceAccount: true
      roleName: external-dns
      wellKnownPolicies:
        externalDNS: true

    - namespace: kube-system
      serviceAccountName: cert-manager
      createServiceAccount: true
      roleName: cert-manager
      wellKnownPolicies:
        certManager: true

    - namespace: kube-system
      serviceAccountName: aws-ebs-csi-controller
      createServiceAccount: true
      roleName: aws-ebs-csi-controller
      wellKnownPolicies:
        ebsCSIController: true

    # - namespace: kube-system
    #   serviceAccountName: aws-efs-csi-controller
    #   createServiceAccount: true
    #   roleName: aws-efs-csi-controller
    #   wellKnownPolicies:
    #     efsCSIController: true

addonsConfig:
  disableDefaultAddons: true
  autoApplyPodIdentityAssociations: true
addons:
  - name: coredns
    version: "1.11.3"
    useDefaultPodIdentityAssociations: true
    configurationValues: |
      replicaCount: 2
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  eks.amazonaws.com/component: coredns
              topologyKey: "kubernetes.io/zone"
      nodeSelector: {}
      tolerations:
        - operator: "Exists"
      topologySpreadConstraints: []

  - name: eks-pod-identity-agent
    version: "1.3.2"
    useDefaultPodIdentityAssociations: true
    configurationValues: |
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: eks-pod-identity-agent
              topologyKey: "kubernetes.io/zone"
      nodeSelector: {}
      tolerations:
        - operator: "Exists"

  - name: kube-proxy
    useDefaultPodIdentityAssociations: true
    version: "1.31.0"

  - name: vpc-cni
    version: "1.18.5"
    useDefaultPodIdentityAssociations: true

managedNodeGroups:
  - name: cluster-autoscaler
    labels:
      role: &clusterAutoscaler cluster-autoscaler
    taints:
      - key: "role"
        value: *clusterAutoscaler
        effect: "NoSchedule"
    instanceType: t4g.medium
    minSize: 2
    maxSize: 10
    privateNetworking: true
    volumeSize: 20
    ebsOptimized: true

  - name: general
    instanceType: t4g.medium
    minSize: 0
    maxSize: 25
    privateNetworking: true
    ebsOptimized: true
