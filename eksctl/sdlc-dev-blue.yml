apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: &clusterName sdlc-dev-green-462
  region: us-west-2
  version: "1.31"

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: cluster-autoscaler
        # namespace: kube-system
      wellKnownPolicies:
        autoScaler: true

vpc:
  id: vpc-0604df84cd9036ddb
  subnets:
    private:
      private-one: { id: subnet-0282590062a438be3 }
      private-two: { id: subnet-0e15c87d734ea4de8 }

addonsConfig:
  disableDefaultAddons: true
addons:
  - name: aws-ebs-csi-driver
    version: "1.35.0"
    attachPolicyARNs: [ arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy ]
    configurationValues: |
      controller:
        replicaCount: 2
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app: ebs-csi-controller
                topologyKey: "kubernetes.io/zone"
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                preference:
                  matchExpressions:
                    - key: role
                      operator: In
                      values:
                        - cluster-services
        tolerations:
          - operator: "Exists"
            effect: "NoSchedule"
      node:
        tolerateAllTaints: true

  - name: coredns
    version: "1.11.3"
    configurationValues: |
      replicaCount: 2
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  eks.amazonaws.com/component: coredns
              topologyKey: "kubernetes.io/zone"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - cluster-services
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"

  - name: eks-pod-identity-agent
    version: "1.3.2"
    configurationValues: |
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: eks-pod-identity-agent
              topologyKey: "kubernetes.io/zone"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: role
                    operator: In
                    values:
                      - cluster-services
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"

  - name: kube-proxy
    version: "1.31.0"

  - name: vpc-cni
    version: "1.18.5"
    attachPolicyARNs: [ arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy ]

# cloudWatch:
#   clusterLogging:
#     enableTypes: [ "all" ]
#     logRetentionInDays: 1

managedNodeGroups:
  - name: cluster-autoscaler
    labels:
      role: &clusterAutoscaler cluster-autoscaler
    taints:
      - key: "role"
        value: *clusterAutoscaler
        effect: "NoSchedule"
    instanceType: t4g.medium
    minSize: 2
    maxSize: 10
    privateNetworking: true
    volumeSize: 20
    ebsOptimized: true

  - name: cluster-services
    labels:
      role: &clusterServices cluster-services
    taints:
      - key: "role"
        value: *clusterServices
        effect: "NoSchedule"
    instanceType: t4g.medium
    minSize: 0
    maxSize: 10
    privateNetworking: true
    volumeSize: 20
    ebsOptimized: true

  - name: general
    instanceType: t4g.medium
    minSize: 0
    maxSize: 25
    privateNetworking: true
    ebsOptimized: true
